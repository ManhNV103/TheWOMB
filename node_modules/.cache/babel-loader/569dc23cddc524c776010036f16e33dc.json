{"ast":null,"code":"import _toConsumableArray from \"/Users/nguyenvanmanh/nvm103/IN01/Sem_6/TheWOMB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/nguyenvanmanh/nvm103/IN01/Sem_6/TheWOMB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nguyenvanmanh/nvm103/IN01/Sem_6/TheWOMB/src/AdvertiserList.js\";\nimport React, { useState } from \"react\";\nimport Advertiser from \"./Advertiser\";\nexport default function AdvertiserList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var imagesPerRow = 5;\n\n  var onSelect = function onSelect(id) {\n    var index = selected.indexOf(id);\n\n    if (index < 0) {\n      setSelected([].concat(_toConsumableArray(selected), [id]));\n    } else {\n      setSelected(selected.filter(function (value) {\n        return value !== id;\n      }));\n    }\n  };\n\n  var advertiserList = props.advertisers.map(function (advertiser) {\n    return React.createElement(\"div\", {\n      style: {\n        width: 100 / imagesPerRow + \"%\"\n      },\n      key: advertiser.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Advertiser, {\n      id: advertiser.id,\n      name: advertiser.name,\n      image: advertiser.image,\n      onSelect: onSelect,\n      chosenAdvertisers: props.chosenAdvertisers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, advertiserList);\n}","map":{"version":3,"sources":["/Users/nguyenvanmanh/nvm103/IN01/Sem_6/TheWOMB/src/AdvertiserList.js"],"names":["React","useState","Advertiser","AdvertiserList","props","selected","setSelected","imagesPerRow","onSelect","id","index","indexOf","filter","value","advertiserList","advertisers","map","advertiser","width","name","image","chosenAdvertisers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,kBACZH,QAAQ,CAAC,EAAD,CADI;AAAA;AAAA,MACrCI,QADqC;AAAA,MAC3BC,WAD2B;;AAE5C,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,EAAE,EAAI;AACrB,QAAIC,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,EAAjB,CAAZ;;AACA,QAAIC,KAAK,GAAG,CAAZ,EAAe;AACbJ,MAAAA,WAAW,8BAAKD,QAAL,IAAeI,EAAf,GAAX;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACD,QAAQ,CAACO,MAAT,CAAgB,UAAAC,KAAK;AAAA,eAAIA,KAAK,KAAKJ,EAAd;AAAA,OAArB,CAAD,CAAX;AACD;AACF,GAPD;;AASA,MAAMK,cAAc,GAAGV,KAAK,CAACW,WAAN,CAAkBC,GAAlB,CAAsB,UAAAC,UAAU,EAAI;AACzD,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAMX,YAAN,GAAqB;AAA9B,OAAZ;AAAiD,MAAA,GAAG,EAAEU,UAAU,CAACR,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEQ,UAAU,CAACR,EADjB;AAEE,MAAA,IAAI,EAAEQ,UAAU,CAACE,IAFnB;AAGE,MAAA,KAAK,EAAEF,UAAU,CAACG,KAHpB;AAIE,MAAA,QAAQ,EAAEZ,QAJZ;AAKE,MAAA,iBAAiB,EAAEJ,KAAK,CAACiB,iBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD,GAZsB,CAAvB;AAcA,SAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,cAAjC,CAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport Advertiser from \"./Advertiser\";\n\nexport default function AdvertiserList(props) {\n  const [selected, setSelected] = useState([]);\n  const imagesPerRow = 5;\n\n  const onSelect = id => {\n    let index = selected.indexOf(id);\n    if (index < 0) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(value => value !== id));\n    }\n  };\n\n  const advertiserList = props.advertisers.map(advertiser => {\n    return (\n      <div style={{ width: 100 / imagesPerRow + \"%\" }} key={advertiser.id}>\n        <Advertiser\n          id={advertiser.id}\n          name={advertiser.name}\n          image={advertiser.image}\n          onSelect={onSelect}\n          chosenAdvertisers={props.chosenAdvertisers}\n        />\n      </div>\n    );\n  });\n\n  return <div className=\"grid-container\">{advertiserList}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}